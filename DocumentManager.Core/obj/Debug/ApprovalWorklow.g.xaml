<?xml version="1.0" encoding="utf-8"?>
<dcw:ApprovalWorklow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:dcw="clr-namespace:DocumentManager.Core.Workflows;assembly=DocumentManager.Core" xmlns:local="clr-namespace:DocumentManager.Core.Activities;assembly=DocumentManager.Core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:p="http://schemas.facturecolombia.com/ContentRepository/" xmlns:p1="http://schemas.facturecolombia.com/activities/" xmlns:p2="clr-namespace:DocumentManager.Base;assembly=DocumentManager.Core" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.ServiceModel.Activities</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>DocumentManager.Core.Workflows</x:String>
      <x:String>DocumentManager</x:String>
      <x:String>DocumentManager.Core.Schema</x:String>
      <x:String>Facture.AppFabric.ActivityLibrary.Extensions</x:String>
      <x:String>DocumentManager.Base</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Facture.AppFabric.ActivityLibrary</AssemblyReference>
      <AssemblyReference>Microsoft.AspNet.SignalR.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Owin</AssemblyReference>
      <AssemblyReference>Microsoft.Owin.Security</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>Owin</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.DataAnnotations</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Data.Entity.Design</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Channels</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Web.DynamicData</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>DocumentManager.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <dcw:ApprovalWorklow.Implementation>
    <Flowchart>
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:Int64" Name="DocumentId" />
        <Variable x:TypeArguments="x:String" Name="Content" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID5">
          <local:SaveDocumentActivity DisplayName="Save Document">
            <local:SaveDocumentActivity.Content>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">Content</mca:CSharpReference>
              </OutArgument>
            </local:SaveDocumentActivity.Content>
            <local:SaveDocumentActivity.DocumentArgument>
              <InArgument x:TypeArguments="p:DocumentContent">
                <mca:CSharpValue x:TypeArguments="p:DocumentContent">Document</mca:CSharpValue>
              </InArgument>
            </local:SaveDocumentActivity.DocumentArgument>
            <local:SaveDocumentActivity.DocumentId>
              <OutArgument x:TypeArguments="x:Int64">
                <mca:CSharpReference x:TypeArguments="x:Int64">DocumentId</mca:CSharpReference>
              </OutArgument>
            </local:SaveDocumentActivity.DocumentId>
          </local:SaveDocumentActivity>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID7">
              <p1:Reply>
                <p1:Reply.Outputs>
                  <InArgument x:TypeArguments="x:Int64" x:Key="DocumentId">
                    <mca:CSharpValue x:TypeArguments="x:Int64">DocumentId</mca:CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content">
                    <mca:CSharpValue x:TypeArguments="x:String">Content</mca:CSharpValue>
                  </InArgument>
                </p1:Reply.Outputs>
              </p1:Reply>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID6">
                  <While>
                    <While.Variables>
                      <Variable x:TypeArguments="x:Boolean" Default="False" Name="IsIssued" />
                    </While.Variables>
                    <While.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">!IsIssued</mca:CSharpValue>
                    </While.Condition>
                    <Pick>
                      <PickBranch DisplayName="Planning">
                        <PickBranch.Trigger>
                          <Sequence>
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Planning_Input" />
                            </Sequence.Variables>
                            <p1:WaitsForUserInput CorrelationInitializer="{x:Null}" BookmarkName="PLANNING">
                              <p1:WaitsForUserInput.Inputs>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </p1:WaitsForUserInput.Inputs>
                              <p1:WaitsForUserInput.Outputs>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </p1:WaitsForUserInput.Outputs>
                            </p1:WaitsForUserInput>
                          </Sequence>
                        </PickBranch.Trigger>
                      </PickBranch>
                      <PickBranch DisplayName="Save">
                        <PickBranch.Trigger>
                          <Sequence>
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Save_Input" />
                            </Sequence.Variables>
                            <p1:WaitsForUserInput CorrelationInitializer="{x:Null}" BookmarkName="SAVE">
                              <p1:WaitsForUserInput.Inputs>
                                <OutArgument x:TypeArguments="p:DocumentContent" x:Key="document">
                                  <mca:CSharpReference x:TypeArguments="p:DocumentContent">Document</mca:CSharpReference>
                                </OutArgument>
                              </p1:WaitsForUserInput.Inputs>
                              <p1:WaitsForUserInput.Outputs>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </p1:WaitsForUserInput.Outputs>
                            </p1:WaitsForUserInput>
                          </Sequence>
                        </PickBranch.Trigger>
                        <Sequence>
                          <local:SaveDocumentActivity Content="{x:Null}" DocumentId="{x:Null}" DisplayName="Save Document">
                            <local:SaveDocumentActivity.DocumentArgument>
                              <InArgument x:TypeArguments="p:DocumentContent">
                                <mca:CSharpValue x:TypeArguments="p:DocumentContent">Document</mca:CSharpValue>
                              </InArgument>
                            </local:SaveDocumentActivity.DocumentArgument>
                          </local:SaveDocumentActivity>
                        </Sequence>
                      </PickBranch>
                      <PickBranch DisplayName="Issue">
                        <PickBranch.Trigger>
                          <Sequence>
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="issue_Input" />
                            </Sequence.Variables>
                            <p1:WaitsForUserInput CorrelationInitializer="{x:Null}" BookmarkName="ISSUE">
                              <p1:WaitsForUserInput.Inputs>
                                <OutArgument x:TypeArguments="p:DocumentContent" x:Key="document">
                                  <mca:CSharpReference x:TypeArguments="p:DocumentContent">Document</mca:CSharpReference>
                                </OutArgument>
                              </p1:WaitsForUserInput.Inputs>
                              <p1:WaitsForUserInput.Outputs>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </p1:WaitsForUserInput.Outputs>
                            </p1:WaitsForUserInput>
                          </Sequence>
                        </PickBranch.Trigger>
                        <Flowchart>
                          <Flowchart.Variables>
                            <Variable x:TypeArguments="p:ValidationResult" Name="ValidationResult">
                              <Variable.Default>
                                <mca:CSharpValue x:TypeArguments="p:ValidationResult">new ValidationResult()</mca:CSharpValue>
                              </Variable.Default>
                            </Variable>
                          </Flowchart.Variables>
                          <Flowchart.StartNode>
                            <FlowStep x:Name="__ReferenceID1">
                              <local:ValidateDocumentActivity DisplayName="Validate Document">
                                <local:ValidateDocumentActivity.DocumentArgument>
                                  <InArgument x:TypeArguments="p:DocumentContent">
                                    <mca:CSharpValue x:TypeArguments="p:DocumentContent">Document</mca:CSharpValue>
                                  </InArgument>
                                </local:ValidateDocumentActivity.DocumentArgument>
                                <local:ValidateDocumentActivity.ErrorMessages>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">
                                    <mca:CSharpReference x:TypeArguments="scg:List(x:String)">ValidationResult.ErrorMessages</mca:CSharpReference>
                                  </OutArgument>
                                </local:ValidateDocumentActivity.ErrorMessages>
                                <local:ValidateDocumentActivity.Result>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">ValidationResult.IsValid</mca:CSharpReference>
                                  </OutArgument>
                                </local:ValidateDocumentActivity.Result>
                              </local:ValidateDocumentActivity>
                              <FlowStep.Next>
                                <FlowDecision x:Name="__ReferenceID2">
                                  <FlowDecision.Condition>
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">ValidationResult.IsValid</mca:CSharpValue>
                                  </FlowDecision.Condition>
                                  <FlowDecision.True>
                                    <FlowStep x:Name="__ReferenceID3">
                                      <local:IssueDocumentActivity DisplayName="Issue Document">
                                        <local:IssueDocumentActivity.DocumentArgument>
                                          <InArgument x:TypeArguments="p:DocumentContent">
                                            <mca:CSharpValue x:TypeArguments="p:DocumentContent">Document</mca:CSharpValue>
                                          </InArgument>
                                        </local:IssueDocumentActivity.DocumentArgument>
                                        <local:IssueDocumentActivity.Result>
                                          <OutArgument x:TypeArguments="p:DocumentContent">
                                            <mca:CSharpReference x:TypeArguments="p:DocumentContent">Document</mca:CSharpReference>
                                          </OutArgument>
                                        </local:IssueDocumentActivity.Result>
                                      </local:IssueDocumentActivity>
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID4">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">IsIssued</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <FlowStep.Next>
                                            <FlowStep x:Name="__ReferenceID0">
                                              <p1:Reply>
                                                <p1:Reply.Outputs>
                                                  <InArgument x:TypeArguments="p:ValidationResult" x:Key="IssueResult">
                                                    <mca:CSharpValue x:TypeArguments="p:ValidationResult">ValidationResult</mca:CSharpValue>
                                                  </InArgument>
                                                </p1:Reply.Outputs>
                                              </p1:Reply>
                                            </FlowStep>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowDecision.True>
                                  <FlowDecision.False>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </FlowDecision.False>
                                </FlowDecision>
                              </FlowStep.Next>
                            </FlowStep>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID1</x:Reference>
                          <x:Reference>__ReferenceID2</x:Reference>
                          <x:Reference>__ReferenceID3</x:Reference>
                          <x:Reference>__ReferenceID4</x:Reference>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </Flowchart>
                      </PickBranch>
                      <PickBranch DisplayName="Revoke">
                        <PickBranch.Trigger>
                          <Sequence>
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Revoke_Input" />
                            </Sequence.Variables>
                            <p1:WaitsForUserInput CorrelationInitializer="{x:Null}" BookmarkName="REVOKE">
                              <p1:WaitsForUserInput.Inputs>
                                <OutArgument x:TypeArguments="p:DocumentContent" x:Key="document">
                                  <mca:CSharpReference x:TypeArguments="p:DocumentContent">Document</mca:CSharpReference>
                                </OutArgument>
                              </p1:WaitsForUserInput.Inputs>
                              <p1:WaitsForUserInput.Outputs>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </p1:WaitsForUserInput.Outputs>
                            </p1:WaitsForUserInput>
                          </Sequence>
                        </PickBranch.Trigger>
                        <Sequence>
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="IsRevoked" />
                            <Variable x:TypeArguments="x:String" Name="RevokeMessage" />
                            <Variable x:TypeArguments="x:Object" Name="DocumentId" />
                          </Sequence.Variables>
                          <local:RevokeDocumentActivity Content="{x:Null}" DocumentId="{x:Null}" DisplayName="Revoke Document">
                            <local:RevokeDocumentActivity.DocumentArgument>
                              <InArgument x:TypeArguments="p:DocumentContent">
                                <mca:CSharpValue x:TypeArguments="p:DocumentContent">Document</mca:CSharpValue>
                              </InArgument>
                            </local:RevokeDocumentActivity.DocumentArgument>
                            <local:RevokeDocumentActivity.ErrorMessage>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String">RevokeMessage</mca:CSharpReference>
                              </OutArgument>
                            </local:RevokeDocumentActivity.ErrorMessage>
                            <local:RevokeDocumentActivity.HandlerId>
                              <OutArgument x:TypeArguments="x:Object">
                                <mca:CSharpReference x:TypeArguments="x:Object">DocumentId</mca:CSharpReference>
                              </OutArgument>
                            </local:RevokeDocumentActivity.HandlerId>
                            <local:RevokeDocumentActivity.IsSuccess>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpReference x:TypeArguments="x:Boolean">IsRevoked</mca:CSharpReference>
                              </OutArgument>
                            </local:RevokeDocumentActivity.IsSuccess>
                          </local:RevokeDocumentActivity>
                          <p:SignalRNotify x:TypeArguments="x:String" DisplayName="Notify Revoked">
                            <p:SignalRNotify.Id>
                              <InArgument x:TypeArguments="x:Object">
                                <mca:CSharpValue x:TypeArguments="x:Object">DocumentId</mca:CSharpValue>
                              </InArgument>
                            </p:SignalRNotify.Id>
                            <p:SignalRNotify.Message>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">RevokeMessage</mca:CSharpValue>
                              </InArgument>
                            </p:SignalRNotify.Message>
                            <p:SignalRNotify.Success>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">IsRevoked</mca:CSharpValue>
                              </InArgument>
                            </p:SignalRNotify.Success>
                          </p:SignalRNotify>
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">IsRevoked</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <TerminateWorkflow DisplayName="Terminate" Reason="Revoke" />
                            </If.Then>
                          </If>
                        </Sequence>
                      </PickBranch>
                    </Pick>
                  </While>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <sads:DebugSymbol.Symbol>9xDoDnNQffWboJPqkms3qCXwb0M6XGluZXRwdWJcZG90bmV0bnVrZVxGYWN0dXJlU291cmNlXE1vZHVsb3NcRG9jdW1lbnRNYW5hZ2VyXERvY3VtZW50TWFuYWdlci5Db3JlXFdvcmtmbG93c1xBcHByb3ZhbFdvcmtsb3cueGFtbD9FA+ACDwIBAUwJXCYDAdYBXw1oGAMBywFrEdUCGQIBAk8PT1wDAeEBWQ9ZXgMB3AFUD1ReAwHXAWUTZVgDAdEBYhNiWgMBzAFtQ21KAgEDchPUAhoCAQpwFXBdAgEEcxWDASIDAccBhAEVnwEiAwG0AaABFYgCIgIBZIkCFdMCIgIBC3UZgQEkAwHIAYYBGZQBJAMBvQGWAReeASIDAbUBogEZsAEkAwGqAbIBF4cCIwIBZYsCGZkCJAIBWpsCF9ICIgIBDHkbgAEyAwHJAYoBG5MBMgMBvgGXARmdATYDAbYBpgEbrwEyAwGrAbYBH7YBfQIBZrwBHcwBPgMBlAHQASPQAXoDAY0B7gEt9AE4AwGFAdQBJd8BQwIBduIBKesBMgIBbY8CG5gCMgIBW6ECGbYCOAIBNbcCGccCKwIBGcgCGdECHgIBDXlgeWoDAcoBjQEhjQF4AwHAAYoBYIoBZgMBvwGaAR+aAW4DAbcBqQEhqQF4AwGtAaYBYKYBZwMBrAHEASPEAZEBAwGjAckBI8kBggEDAZwBvwEjvwFyAwGVAfEBM/EBiwEDAYYB3AEr3AGCAQIBftcBK9cBegIBd+kBVekBWQIBdeUBL+UBfgIBbpICIZICeAIBXY8CYI8CaAIBXK4CH64CbwIBUbMCH7MCbwIBSKkCH6kCcgIBP6QCH6QCbgIBNroCH7oCZwIBLMQCH8QCZwIBI78CH78CagIBGssCH8sCZwIBDs8CHc8CkAECARfPAoUBzwKNAQIBGA==</sads:DebugSymbol.Symbol>
    </Flowchart>
  </dcw:ApprovalWorklow.Implementation>
</dcw:ApprovalWorklow>